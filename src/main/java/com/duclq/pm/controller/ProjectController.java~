package com.duclq.pm.controller;

import com.duclq.pm.model.Project;
import com.duclq.pm.repository.ProjectRepository;
import jakarta.persistence.EntityManager;
import jakarta.transaction.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cglib.core.Local;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/projects")
public class ProjectController {

    @Autowired
    private ProjectRepository projectRepository;

    @GetMapping
    public List<Project> getAllProjects(){
        return projectRepository.findAll();
    }

    @PostMapping
    public Project createProject(@RequestBody Project project){
        project.setCreatedDate(LocalDate.now());
        return projectRepository.save(project);
    }

    @PutMapping("/{id}")
    public ResponseEntity<Project> updateProject(@PathVariable Long id, @RequestBody Project projectDetails){
        Optional<Project> projectOptional = projectRepository.findById(id);
        if(projectOptional.isEmpty()){
            return ResponseEntity.notFound().build();
        }

        Project project = projectOptional.get();
        project.setName(projectDetails.getName());
        project.setDescription(projectDetails.getDescription());

        Project updatedProject = projectRepository.save(project);
        return ResponseEntity.ok(updatedProject);
    }

    @DeleteMapping("{id}")
    public ResponseEntity<Void> deleteProject(@PathVariable Long id){
        Optional<Project> projectOptional = projectRepository.findById(id);
        if(projectOptional.isEmpty()){
            return ResponseEntity.notFound().build();
        }

        projectRepository.deleteById(id);
        return ResponseEntity.noContent().build();
    }
}
